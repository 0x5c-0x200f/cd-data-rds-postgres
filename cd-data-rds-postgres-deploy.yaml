AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create a PostgreSQL RDS instance and initialize schema and tables.

Parameters:
  DBName:
    Description: Name of the PostgreSQL database
    Type: String
    Default: taskdb

  DBUser:
    Description: The database admin username
    Type: String
    Default: admin

  DBPassword:
    Description: The database admin password
    Type: String
    NoEcho: true

  DBAllocatedStorage:
    Description: The size of the database (GB)
    Type: Number
    Default: 20

  DBInstanceClass:
    Description: The RDS instance type
    Type: String
    Default: db.t3.micro

  PublicAccess:
    Description: Whether the database is publicly accessible
    Type: String
    AllowedValues: ["true", "false"]
    Default: "true"

Resources:
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to RDS instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0 # Change to a specific IP range for better security

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      AllocatedStorage: !Ref DBAllocatedStorage
      DBInstanceClass: !Ref DBInstanceClass
      Engine: postgres
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: !Ref PublicAccess
      VPCSecurityGroups:
        - !GetAtt RDSSecurityGroup.GroupId

  DBInit:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Initialize the database schema and tables
      Family: aurora-postgresql13
      Parameters:
        initdb.schemas: |
          CREATE SCHEMA YAHAV_HOFFMANN;
          CREATE TABLE YAHAV_HOFFMANN.users (
              id SERIAL PRIMARY KEY,
              first_name VARCHAR(50) NOT NULL,
              last_name VARCHAR(50) NOT NULL,
              address TEXT,
              phone_number VARCHAR(15)
          );
          CREATE TABLE YAHAV_HOFFMANN.hobbies (
              user_id INT REFERENCES YAHAV_HOFFMANN.users(id) ON DELETE CASCADE,
              hobby TEXT NOT NULL
          );
Outputs:
  RDSInstanceEndpoint:
    Description: The endpoint of the RDS instance
    Value: !GetAtt RDSInstance.Endpoint.Address

  SecurityGroupID:
    Description: The ID of the RDS security group
    Value: !Ref RDSSecurityGroup
